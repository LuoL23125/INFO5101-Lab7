/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.CardLayout;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Student;
import utility.DatabaseConnector;
import utility.Validations;

/**
 *
 * @author luole
 */
public class ViewJPanel extends javax.swing.JPanel {

    private Student userObject;

    // create a list to hold users
    private ArrayList<Student> students;

    /**
     * Creates new form viewJPanel
     */
    public ViewJPanel() {
        initComponents();
        populateTable();
    }

    public final void setAllField() {
        this.firstNameTextfield.setText(userObject.getName());
        this.ageSpinner.setValue(userObject.getAge());

        String college = userObject.getCollege();
        if (college != null) {
            switch (college) {
                case "College of Science (COS)" ->
                    this.COSRadioButton.setSelected(true);
                case "College of Engineering (COE)" ->
                    this.COERadioButton.setSelected(true);
                default -> {
                    System.err.println("Unknown college: " + college);
                    // Clear selections
                    this.COSRadioButton.setSelected(false);
                    this.COERadioButton.setSelected(false);
                }
            }
        } else {
            // Handle null college
            System.err.println("College is null for this student");
            this.COSRadioButton.setSelected(false);
            this.COERadioButton.setSelected(false);
        }
        this.phoneFormattedTextField.setText(userObject.getPhone());
        this.hobbyTextArea.setText(userObject.getExperience());
        this.continentComboBox.setSelectedItem(userObject.getContinent());

    }

    private void populateTable() {

        try {

            //get students from database
            students = DatabaseConnector.getUsers();
            // get table model of studentTable
            DefaultTableModel studentsTable = (DefaultTableModel) this.studentTable.getModel();
            // clear the table
            studentsTable.setRowCount(0);

            for (Student student : students) {
                Object[] row = new Object[7];

                // Destructure student data according to columns
                row[0] = student.getId();
                row[1] = student.getName();
                row[2] = student.getAge();
                row[3] = student.getCollege();
                row[4] = student.getPhone();
                row[5] = student.getContinent();
                row[6] = student.getExperience();

                // add the row to the table
                studentsTable.addRow(row);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e, "Ooops!", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void clearFormFields() {
        this.firstNameTextfield.setText(null);
        this.ageSpinner.setValue(0);
        this.collegeButtonGroup.clearSelection();
        this.phoneFormattedTextField.setText(null);
        this.hobbyTextArea.setText(null);
        this.continentComboBox.setSelectedItem(null);
    }

    private void toggleEnableProperty(boolean b) {
        this.firstNameTextfield.setEnabled(b);
        this.ageSpinner.setEnabled(b);
        this.COERadioButton.setEnabled(b);
        this.COSRadioButton.setEnabled(b);
        this.phoneFormattedTextField.setEnabled(b);
        this.hobbyTextArea.setEnabled(b);
        this.continentComboBox.setEnabled(b);
        this.updateButton.setEnabled(b);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        collegeButtonGroup = new javax.swing.ButtonGroup();
        firstNameTextfield = new javax.swing.JTextField();
        registrationLabel1 = new javax.swing.JLabel();
        genderLabel = new javax.swing.JLabel();
        ageLabel = new javax.swing.JLabel();
        firstNameLabel = new javax.swing.JLabel();
        COSRadioButton = new javax.swing.JRadioButton();
        COERadioButton = new javax.swing.JRadioButton();
        phoneNumberLabel = new javax.swing.JLabel();
        ageSpinner = new javax.swing.JSpinner();
        phoneFormattedTextField = new javax.swing.JFormattedTextField();
        hobbyLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        hobbyTextArea = new javax.swing.JTextArea();
        continentLabel = new javax.swing.JLabel();
        continentComboBox = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        studentTable = new javax.swing.JTable();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 204));

        firstNameTextfield.setEnabled(false);
        firstNameTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameTextfieldActionPerformed(evt);
            }
        });

        registrationLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        registrationLabel1.setText("User Registration Submitted");

        genderLabel.setText("College");

        ageLabel.setText("Age:");

        firstNameLabel.setText("First Name :");

        collegeButtonGroup.add(COSRadioButton);
        COSRadioButton.setText("College of Science (COS)");
        COSRadioButton.setActionCommand(" COS");
        COSRadioButton.setEnabled(false);
        COSRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                COSRadioButtonActionPerformed(evt);
            }
        });

        collegeButtonGroup.add(COERadioButton);
        COERadioButton.setText("College of Engineering (COE)");
        COERadioButton.setActionCommand(" COE");
        COERadioButton.setEnabled(false);
        COERadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                COERadioButtonActionPerformed(evt);
            }
        });

        phoneNumberLabel.setText("Phone Number:");

        ageSpinner.setModel(new javax.swing.SpinnerNumberModel(0, null, 120, 1));
        ageSpinner.setEnabled(false);

        try {
            phoneFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###-###-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        phoneFormattedTextField.setToolTipText("123-456-7890");
        phoneFormattedTextField.setEnabled(false);

        hobbyLabel.setText("Experience");

        hobbyTextArea.setColumns(20);
        hobbyTextArea.setRows(5);
        hobbyTextArea.setEnabled(false);
        jScrollPane1.setViewportView(hobbyTextArea);

        continentLabel.setText("Continent:");

        continentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Asia", "Africa", "North America", "South America", "Antarctica", "Europe", "Australia " }));
        continentComboBox.setSelectedIndex(-1);
        continentComboBox.setEnabled(false);

        studentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Student ID", "Full Name", "Age", "College", "Phone", "Continent", "Experience"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(studentTable);

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(ageLabel, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(genderLabel, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(phoneNumberLabel, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(firstNameLabel, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(phoneFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(COERadioButton)
                                    .addComponent(ageSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(firstNameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(98, 98, 98)
                                        .addComponent(editButton)
                                        .addGap(164, 164, 164)
                                        .addComponent(deleteButton))
                                    .addComponent(COSRadioButton)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(continentLabel)
                                    .addComponent(hobbyLabel))
                                .addGap(55, 55, 55)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(updateButton)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(continentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(59, 59, 59)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(371, 371, 371)
                        .addComponent(registrationLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(319, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(registrationLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(firstNameLabel)
                        .addComponent(firstNameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(editButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(deleteButton)
                        .addGap(8, 8, 8)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ageLabel)
                            .addComponent(ageSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(genderLabel)
                            .addComponent(COERadioButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(COSRadioButton)
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phoneNumberLabel)
                            .addComponent(phoneFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(hobbyLabel)
                                .addGap(62, 62, 62))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(continentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(continentLabel))
                        .addGap(53, 53, 53)
                        .addComponent(updateButton))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(204, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void firstNameTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameTextfieldActionPerformed

    private void COSRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_COSRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_COSRadioButtonActionPerformed

    private void COERadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_COERadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_COERadioButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:

        int selectedStudent = this.studentTable.getSelectedRow();

        this.userObject = this.students.get(selectedStudent);

        //set student's data in the form
        setAllField();

        toggleEnableProperty(true);


    }//GEN-LAST:event_editButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:

        try {
            // Declare Variables from user input
            String name;
            String college;
            int age;
            String phoneNumber;
            String continent = "";
            String experience;

            // Extract and Store user data
            name = firstNameTextfield.getText();
            age = (int) this.ageSpinner.getModel().getValue();
            phoneNumber = this.phoneFormattedTextField.getText();
            experience = (String) this.hobbyTextArea.getText();

            // Get gender from radio button group
            if (collegeButtonGroup.getSelection() != null) {
                college = collegeButtonGroup.getSelection().getActionCommand();
            } else {
                college = null;
            }

            if (continentComboBox.getSelectedIndex() != -1) {
                continent = (String) continentComboBox.getSelectedItem();
            }

            String validationResult = Validations.validateStudentForm(name, age, college, phoneNumber, continent, experience);

            if (validationResult != null) {
                JOptionPane.showMessageDialog(this, validationResult, "Ooops!", JOptionPane.ERROR_MESSAGE);
                return;
            }

            //creat Student object
            Student user = new Student(name, age, college, phoneNumber, continent, experience);

            // update data to database
            DatabaseConnector.updateUser(this.userObject, user);

            //show success message
            JOptionPane.showMessageDialog(this, user.toString(), "Success!", JOptionPane.INFORMATION_MESSAGE);

            // referesh
            populateTable();

            //cleanup
            clearFormFields();
            toggleEnableProperty(false);
            this.userObject = null;

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e, "Ooops!", JOptionPane.ERROR_MESSAGE);
            // System.out.println("Error: " + e.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e, "Ooops!", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_updateButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed

        // TODO add your handling code here:
        //retrive user index
        int selectedStudent = this.studentTable.getSelectedRow();

        this.userObject = this.students.get(selectedStudent);
        
        try {
           
            
            int response = JOptionPane.showConfirmDialog(this,"confirm deletion for:" + this.userObject.getName(), 
                    "Delete confirmation", 
                    JOptionPane.YES_NO_OPTION, 
                    JOptionPane.QUESTION_MESSAGE);
            
            if (response == 0){
                DatabaseConnector.deleteUser(userObject);
                JOptionPane.showMessageDialog(this, "Data successfully deleted" + this.userObject.getName(), "Success!", JOptionPane.INFORMATION_MESSAGE);
                populateTable();
            }
            

        } catch (SQLException ex) {
            System.getLogger(ViewJPanel.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
        }
        
        this.userObject = null;


    }//GEN-LAST:event_deleteButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton COERadioButton;
    private javax.swing.JRadioButton COSRadioButton;
    private javax.swing.JLabel ageLabel;
    private javax.swing.JSpinner ageSpinner;
    private javax.swing.ButtonGroup collegeButtonGroup;
    private javax.swing.JComboBox<String> continentComboBox;
    private javax.swing.JLabel continentLabel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JTextField firstNameTextfield;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JLabel hobbyLabel;
    private javax.swing.JTextArea hobbyTextArea;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JFormattedTextField phoneFormattedTextField;
    private javax.swing.JLabel phoneNumberLabel;
    private javax.swing.JLabel registrationLabel1;
    private javax.swing.JTable studentTable;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
